// 3312 - Imberbe MatemÃ¡tico
// https://judge.beecrowd.com/pt/problems/view/3312

use std::io;

fn is_prime(n: i64) -> bool {
    if n == 1 { return false; }

    let upper_limit: i64 = f64::sqrt(n as f64) as i64;
    for i in 2..=upper_limit {
        if n % i == 0 {
            return false;
        }
    }
    true
}

fn factorial(n: &i64) -> &str {
   match n {
        2 => "2",
        3 => "6",
        5 => "120",
        7 => "5040",
        11 => "39916800",
        13 => "6227020800",
        17 => "355687428096000",
        19 => "121645100408832000",
        23 => "25852016738884976640000",
        29 => "8841761993739701954543616000000",
        31 => "8222838654177922817725562880000000",
        37 => "13763753091226345046315979581580902400000000",
        41 => "33452526613163807108170062053440751665152000000000",
        43 => "60415263063373835637355132068513997507264512000000000",
        47 => "258623241511168180642964355153611979969197632389120000000000",
        53 => "4274883284060025564298013753389399649690343788366813724672000000000000",
        59 => "138683118545689835737939019720389406345902876772687432540821294940160000000000000",
        61 => "507580213877224798800856812176625227226004528988036003099405939480985600000000000000",
        67 => "36471110918188685288249859096605464427167635314049524593701628500267962436943872000000000000000",
        71 => "850478588567862317521167644239926010288584608120796235886430763388588680378079017697280000000000000000",
        73 => "4470115461512684340891257138125051110076800700282905015819080092370422104067183317016903680000000000000000",
        79 => "894618213078297528685144171539831652069808216779571907213868063227837990693501860533361810841010176000000000000000000",
        83 => "39455239697206586511897471180120610571436503407643446275224357528369751562996629334879591940103770870906880000000000000000000",
        89 => "16507955160908461081216919262453619309839666236496541854913520707833171034378509739399912570787600662729080382999756800000000000000000000",
        97 => "96192759682482119853328425949563698712343813919172976158104477319333745612481875498805879175589072651261284189679678167647067832320000000000000000000000",
        _ => "?",
   }
}

fn main() -> io::Result<()> {
    let stdin = io::stdin();
    let mut buffer = String::new();

    // ignore first line
    stdin.read_line(&mut buffer)?;
    buffer.clear();

    stdin.read_line(&mut buffer)?;
    let numbers: Vec<i64> = buffer.trim().split(" ")
                                  .map(|x| x.parse().unwrap())
                                  .collect();

    for n in numbers.iter().filter(|&n| is_prime(*n)) {
        println!("{}! = {}", n, factorial(n));
    }

    Ok(())
}